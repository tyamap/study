import numpy as np

# ====================
# 固有値と固有ベクトル
# 正方行列Aに対して、以下の関係を満たすスカラーλを、行列Aの「固有値」。ベクトルxを行列Aの「固有ベクトル」という。
# (Latex) $$A\vec{x} = \lambda\vec{x}$$
# つまり固有ベクトルは、線形変換により各要素が固有値倍になるベクトルのこと

# 例えば以下のような単位行列Eがある。
E = np.eye((2))
# 単位行列をかけてもベクトルは変化しないので、
# (Latex) $$A\vec{x} = \lambda E \vec{x}$$
# 右辺を左辺に代入して、
# $$(A - \lambda E)\vec{x} = \vec{0}$$
# 行列(A-λE)が逆行列を持つとすると、
# $$\vec{x} = (A - \lambda E)^{-1} \vec{0} = \vec{0}$$
# となり、ベクトルxは0となる。
# 行列(A-λE)が逆行列を持たないものとして考えると、以下の関係が満たされる。
# $$det(A - \lambda E) = 0$$
# これを行列Aの「固有方程式」という。

# NumPyのlinalg.eig()関数により、固有値と固有ベクトルを同時に求めることができる。
a = np.array([[3, 1], 
              [2, 4]])

ev = np.linalg.eig(a) # 固有値と固有ベクトルを求める。

print(ev[0]) # 最初の要素が固有値
print()
print(ev[1]) # 二つ目の要素は固有ベクトル

# 上の例では、二つの固有値が求められた。
# 固有ベクトルも２つ。求められた行列の各行が、固有ベクトルを表す、
# 各固有ベクトルはL2ノルムが 1 となっている。L2ノルムが１となるベクトルを「単位ベクトル」という。
# NumPyのlinalg.eig()関数は、固有ベクトルを単位ベクトルの形で返す。